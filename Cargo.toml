[package]
name = "phantomsdrdsp"
version = "0.1.0"
authors = ["media"]
edition = "2018"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
wasm-bindgen = "0.2.63"

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.6", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
wee_alloc = { version = "0.4.5", optional = true }
futuredsp = "0.0.6"
js-sys = "0.3.63"
symphonia = "0.5.2"
samplerate = "0.2.4"
ringbuf = "0.3.3"
web-sys = { version = "0.3.63", features = ["console"] }
zstd = { version = "0.12.3", features = ["wasm"] }
serde = { version = "1.0.163", features = ["derive"] }
serde-wasm-bindgen = "0.5.0"
digital-filter = "0.1.1"
rubato = "0.12.0"
rustfft = "6.1.0"

[dev-dependencies]
wasm-bindgen-test = "0.3.13"

[profile.release]
# Tell `rustc` to optimize for small code size.
lto = true
opt-level = 3
wasm-opt = ['-O4']

[build-dependencies]
cc = "1.0.79"

#CMAKE=$(pwd)/cmake.sh CFLAGS="-I$(pwd)/includes -nostdlib -Wl,--no-entry" wasm-pack build